package com.cra.princess.training

import com.cra.princess.training.training.{TrainingControls, TrainingState, TrainingTime}


class ExploreExploitPolicy(min: Double, max: Double) extends ((TrainingControls, TrainingState, TrainingTime) => TrainingControls) {
  private var iterations = 0
  override def apply(optCtrls: TrainingControls, state: TrainingState, time: TrainingTime): TrainingControls = {
    val cutoff = 1/(iterations + 1)
    iterations += 1
    if(Math.random() < cutoff) {
      val range = Math.abs(min - max)
      Array.fill(optCtrls.length)(Math.random() * range + min)
    } else optCtrls
  }
  def resetIterations(): Unit = iterations = 0
  def getIterations: Int = iterations
  def setIterations(i: Int): Unit = iterations = i
}
