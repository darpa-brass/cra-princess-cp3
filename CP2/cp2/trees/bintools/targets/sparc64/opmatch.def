sethi u32num, reg		= sethi_
sethi expr, reg			= sethi_

add reg, reg, reg		= arith(ADD)
add reg, i13num, reg		= arith(ADD)
addcc reg, reg, reg		= arith(ADDcc)
addcc reg, i13num, reg		= arith(ADDcc)
addc reg, reg, reg		= arith(ADDC)
addc reg, i13num, reg		= arith(ADDC)
addccc reg, reg, reg		= arith(ADDCcc)
addccc reg, i13num, reg		= arith(ADDCcc)
sub reg, reg, reg		= arith(SUB)
sub reg, i13num, reg		= arith(SUB)
subcc reg, reg, reg		= arith(SUBcc)
subcc reg, i13num, reg		= arith(SUBcc)
subc reg, reg, reg		= arith(SUBC)
subc reg, i13num, reg		= arith(SUBC)
subccc reg, reg, reg		= arith(SUBCcc)
subccc reg, i13num, reg		= arith(SUBCcc)
and reg, reg, reg		= arith(AND)
and reg, i13num, reg		= arith(AND)
andcc reg, reg, reg		= arith(ANDcc)
andcc reg, i13num, reg		= arith(ANDcc)
andn reg, reg, reg		= arith(ANDN)
andn reg, i13num, reg		= arith(ANDN)
andncc reg, reg, reg		= arith(ANDNcc)
andncc reg, i13num, reg		= arith(ANDNcc)
or reg, reg, reg		= arith(OR)
or reg, i13num, reg		= arith(OR)
or reg, expr, reg		= arith(OR)
orcc reg, reg, reg		= arith(ORcc)
orcc reg, i13num, reg		= arith(ORcc)
orn reg, reg, reg		= arith(ORN)
orn reg, i13num, reg		= arith(ORN)
orncc reg, reg, reg		= arith(ORNcc)
orncc reg, i13num, reg		= arith(ORNcc)
xor reg, reg, reg		= arith(XOR)
xor reg, i13num, reg		= arith(XOR)
xorcc reg, reg, reg		= arith(XORcc)
xorcc reg, i13num, reg		= arith(XORcc)
xnor reg, reg, reg		= arith(XNOR)
xnor reg, i13num, reg		= arith(XNOR)
xnorcc reg, reg, reg		= arith(XNORcc)
xnorcc reg, i13num, reg		= arith(XNORcc)
popc reg, reg
popc i13num, reg
save reg, reg, reg		= arith(SAVE)
save reg, i13num, reg		= arith(SAVE)
restore reg, reg, reg		= arith(RESTORE)
restore reg, i13num, reg	= arith(RESTORE)
taddcc reg, reg, reg		= arith(TADDcc)
taddcc reg, i13num, reg		= arith(TADDcc)
taddcctv reg, reg, reg		= arith(TADDccTV)
taddcctv reg, i13num, reg	= arith(TADDccTV)
tsubcc reg, reg, reg		= arith(TSUBcc)
tsubcc reg, i13num, reg		= arith(TSUBcc)
tsubcctv reg, reg, reg		= arith(TSUBccTV)
tsubcctv reg, i13num, reg	= arith(TSUBccTV)

# these are sparcv8 but still appear in gcc sparc64 output...
addx reg, reg, reg		= arith(ADDC)
addx reg, i13num, reg		= arith(ADDC)
addxcc reg, reg, reg		= arith(ADDCcc)
addxcc reg, i13num, reg		= arith(ADDCcc)
subx reg, reg, reg		= arith(SUBC)
subx reg, i13num, reg		= arith(SUBC)
subxcc reg, reg, reg		= arith(SUBCcc)
subxcc reg, i13num, reg		= arith(SUBCcc)

sll reg, reg, reg		= shift(SLL)
sll reg, u5num, reg		= shift(SLL)
srl reg, reg, reg		= shift(SRL)
srl reg, u5num, reg		= shift(SRL)
sra reg, reg, reg		= shift(SRA)
sra reg, u5num, reg		= shift(SRA)
sllx reg, reg, reg		= shiftx(SLL)
sllx reg, u6num, reg		= shiftx(SLL)
srlx reg, reg, reg		= shiftx(SRL)
srlx reg, u6num, reg		= shiftx(SRL)
srax reg, reg, reg		= shiftx(SRA)
srax reg, u6num, reg		= shiftx(SRA)

# note: these deprecated and for v8 compat only
umul reg, reg, reg		= mul(UMUL)
umul reg, i13num, reg		= mul(UMUL)
smul reg, reg, reg		= mul(SMUL)
smul reg, i13num, reg		= mul(SMUL)
umulcc reg, reg, reg		= mul(UMULcc)
umulcc reg, i13num, reg		= mul(UMULcc)
smulcc reg, reg, reg		= mul(SMULcc)
smulcc reg, i13num, reg		= mul(SMULcc)
mulscc reg, reg, reg		= mul(MULScc)
mulscc reg, i13num, reg		= mul(MULScc)
sdiv reg, reg, reg		= div(SDIV)
sdiv reg, i13num, reg		= div(SDIV)
udiv reg, reg, reg		= div(UDIV)
udiv reg, i13num, reg		= div(UDIV)
sdivcc reg, reg, reg		= div(SDIVcc)
sdivcc reg, i13num, reg		= div(SDIVcc)
udivcc reg, reg, reg		= div(UDIVcc)
udivcc reg, i13num, reg		= div(UDIVcc)

# v9 versions
mulx reg, reg, reg		= muldivx(MULX)
mulx reg, i13num, reg		= muldivx(MULX)
sdivx reg, reg, reg		= muldivx(SDIVX)
sdivx reg, i13num, reg		= muldivx(SDIVX)
udivx reg, reg, reg		= muldivx(UDIVX)
udivx reg, i13num, reg		= muldivx(UDIVX)

fadds freg, freg, freg		= fadd(FADDs)
faddd freg, freg, freg		= fadd(FADDd)
faddq freg, freg, freg		= fadd(FADDq)
fsubs freg, freg, freg		= fadd(FSUBs)
fsubd freg, freg, freg		= fadd(FSUBd)
fsubq freg, freg, freg		= fadd(FSUBq)

fcmps fcc, freg, freg		= fcmp(FCMPs)
fcmpd fcc, freg, freg		= fcmp(FCMPd)
fcmpq fcc, freg, freg		= fcmp(FCMPq)
fcmpes fcc, freg, freg		= fcmp(FCMPEs)
fcmped fcc, freg, freg		= fcmp(FCMPEd)
fcmpeq fcc, freg, freg		= fcmp(FCMPEq)

fstox freg, freg		= fto(FsTOx)
fdtox freg, freg		= fto(FdTOx)
fqtox freg, freg		= fto(FqTOx)
fstoi freg, freg		= fto(FsTOi)
fdtoi freg, freg		= fto(FdTOi)
fqtoi freg, freg		= fto(FqTOi)
fxtos freg, freg		= fto(FxTOs)
fxtod freg, freg		= fto(FxTOd)
fxtoq freg, freg		= fto(FxTOq)
fitos freg, freg		= fto(FiTOs)
fitod freg, freg		= fto(FiTOd)
fitoq freg, freg		= fto(FiTOq)
fstod freg, freg		= fto(FsTOd)
fstoq freg, freg		= fto(FsTOq)
fdtos freg, freg		= fto(FdTOs)
fdtoq freg, freg		= fto(FdTOq)
fqtos freg, freg		= fto(FqTOs)
fqtod freg, freg		= fto(FqTOd)

fmovs freg, freg		= fmov(FMOVs)
fmovd freg, freg		= fmov(FMOVd)
fmovq freg, freg		= fmov(FMOVq)
fnegs freg, freg		= fmov(FNEGs)
fnegd freg, freg		= fmov(FNEGd)
fnegq freg, freg		= fmov(FNEGq)
fabss freg, freg		= fmov(FABSs)
fabsd freg, freg		= fmov(FABSd)
fabsq freg, freg		= fmov(FABSq)
fsqrts freg, freg		= fmov(FSQRTs)
fsqrtd freg, freg		= fmov(FSQRTd)
fsqrtq freg, freg		= fmov(FSQRTq)

fmuls freg, freg, freg		= fmul(FMULs)
fmuld freg, freg, freg		= fmul(FMULd)
fmulq freg, freg, freg		= fmul(FMULq)
fsmuld freg, freg, freg		= fmul(FsMULd)
fdmulq freg, freg, freg		= fmul(FdMULq)
fdivs freg, freg, freg		= fmul(FDIVs)
fdivd freg, freg, freg		= fmul(FDIVd)
fdivq freg, freg, freg		= fmul(FDIVq)

brz reg, symbol			= bpr(BRZ, NOANNUL, PT)
brz,pt reg, symbol		= bpr(BRZ, NOANNUL, PT)
brz,pn reg, symbol		= bpr(BRZ, NOANNUL, PN)
brz,a reg, symbol		= bpr(BRZ, ANNUL, PT)
brz,a,pt reg, symbol		= bpr(BRZ, ANNUL, PT)
brz,a,pn reg, symbol		= bpr(BRZ, ANNUL, PN)
brlez reg, symbol		= bpr(BRLEZ, NOANNUL, PT)
brlez,pt reg, symbol		= bpr(BRLEZ, NOANNUL, PT)
brlez,pn reg, symbol		= bpr(BRLEZ, NOANNUL, PN)
brlez,a reg, symbol		= bpr(BRLEZ, ANNUL, PT)
brlez,a,pt reg, symbol		= bpr(BRLEZ, ANNUL, PT)
brlez,a,pn reg, symbol		= bpr(BRLEZ, ANNUL, PN)
brlz reg, symbol		= bpr(BRLZ, NOANNUL, PT)
brlz,pt reg, symbol		= bpr(BRLZ, NOANNUL, PT)
brlz,pn reg, symbol		= bpr(BRLZ, NOANNUL, PN)
brlz,a reg, symbol		= bpr(BRLZ, ANNUL, PT)
brlz,a,pt reg, symbol		= bpr(BRLZ, ANNUL, PT)
brlz,a,pn reg, symbol		= bpr(BRLZ, ANNUL, PN)
brnz reg, symbol		= bpr(BRNZ, NOANNUL, PT)
brnz,pt reg, symbol		= bpr(BRNZ, NOANNUL, PT)
brnz,pn reg, symbol		= bpr(BRNZ, NOANNUL, PN)
brnz,a reg, symbol		= bpr(BRNZ, ANNUL, PT)
brnz,a,pt reg, symbol		= bpr(BRNZ, ANNUL, PT)
brnz,a,pn reg, symbol		= bpr(BRNZ, ANNUL, PN)
brgz reg, symbol		= bpr(BRGZ, NOANNUL, PT)
brgz,pt reg, symbol		= bpr(BRGZ, NOANNUL, PT)
brgz,pn reg, symbol		= bpr(BRGZ, NOANNUL, PN)
brgz,a reg, symbol		= bpr(BRGZ, ANNUL, PT)
brgz,a,pt reg, symbol		= bpr(BRGZ, ANNUL, PT)
brgz,a,pn reg, symbol		= bpr(BRGZ, ANNUL, PN)
brgez reg, symbol		= bpr(BRGEZ, NOANNUL, PT)
brgez,pt reg, symbol		= bpr(BRGEZ, NOANNUL, PT)
brgez,pn reg, symbol		= bpr(BRGEZ, NOANNUL, PN)
brgez,a reg, symbol		= bpr(BRGEZ, ANNUL, PT)
brgez,a,pt reg, symbol		= bpr(BRGEZ, ANNUL, PT)
brgez,a,pn reg, symbol		= bpr(BRGEZ, ANNUL, PN)

# note: these are deprecated and for v8 compat only
fba symbol			= fbfcc(FBA, NOANNUL)
fba,a symbol			= fbfcc(FBA, ANNUL)
fbn symbol			= fbfcc(FBN, NOANNUL)
fbn,a symbol			= fbfcc(FBN, ANNUL)
fbu symbol			= fbfcc(FBU, NOANNUL)
fbu,a symbol			= fbfcc(FBU, ANNUL)
fbg symbol			= fbfcc(FBG, NOANNUL)
fbg,a symbol			= fbfcc(FBG, ANNUL)
fbug symbol			= fbfcc(FBUG, NOANNUL)
fbug,a symbol			= fbfcc(FBUG, ANNUL)
fbl symbol			= fbfcc(FBL, NOANNUL)
fbl,a symbol			= fbfcc(FBL, ANNUL)
fbul symbol			= fbfcc(FBUL, NOANNUL)
fbul,a symbol			= fbfcc(FBUL, ANNUL)
fblg symbol			= fbfcc(FBLG, NOANNUL)
fblg,a symbol			= fbfcc(FBLG, ANNUL)
fbne symbol			= fbfcc(FBNE, NOANNUL)
fbne,a symbol			= fbfcc(FBNE, ANNUL)
fbe symbol			= fbfcc(FBE, NOANNUL)
fbe,a symbol			= fbfcc(FBE, ANNUL)
fbue symbol			= fbfcc(FBUE, NOANNUL)
fbue,a symbol			= fbfcc(FBUE, ANNUL)
fbge symbol			= fbfcc(FBGE, NOANNUL)
fbge,a symbol			= fbfcc(FBGE, ANNUL)
fbuge symbol			= fbfcc(FBUGE, NOANNUL)
fbuge,a symbol			= fbfcc(FBUGE, ANNUL)
fble symbol			= fbfcc(FBLE, NOANNUL)
fble,a symbol			= fbfcc(FBLE, ANNUL)
fbule symbol			= fbfcc(FBULE, NOANNUL)
fbule,a symbol			= fbfcc(FBULE, ANNUL)
fbo symbol			= fbfcc(FBO, NOANNUL)
fbo,a symbol			= fbfcc(FBO, ANNUL)
# same as fbne and fbe
fbnz symbol			= fbfcc(FBNE, NOANNUL)
fbnz,a symbol			= fbfcc(FBNE, ANNUL)
fbz symbol			= fbfcc(FBE, NOANNUL)
fbz,a symbol			= fbfcc(FBE, ANNUL)

# these are the v9 versions
fba fcc, symbol			= fbpfcc(FBA, NOANNUL, PT)
fba,pt fcc, symbol		= fbpfcc(FBA, NOANNUL, PT)
fba,pn fcc, symbol		= fbpfcc(FBA, NOANNUL, PN)
fba,a fcc, symbol		= fbpfcc(FBA, ANNUL, PT)
fba,a,pt fcc, symbol		= fbpfcc(FBA, ANNUL, PT)
fba,a,pn fcc, symbol		= fbpfcc(FBA, ANNUL, PN)
fbn fcc, symbol			= fbpfcc(FBN, NOANNUL, PT)
fbn,pt fcc, symbol		= fbpfcc(FBN, NOANNUL, PT)
fbn,pn fcc, symbol		= fbpfcc(FBN, NOANNUL, PN)
fbn,a fcc, symbol		= fbpfcc(FBN, ANNUL, PT)
fbn,a,pt fcc, symbol		= fbpfcc(FBN, ANNUL, PT)
fbn,a,pn fcc, symbol		= fbpfcc(FBN, ANNUL, PN)
fbu fcc, symbol			= fbpfcc(FBU, NOANNUL, PT)
fbu,pt fcc, symbol		= fbpfcc(FBU, NOANNUL, PT)
fbu,pn fcc, symbol		= fbpfcc(FBU, NOANNUL, PN)
fbu,a fcc, symbol		= fbpfcc(FBU, ANNUL, PT)
fbu,a,pt fcc, symbol		= fbpfcc(FBU, ANNUL, PT)
fbu,a,pn fcc, symbol		= fbpfcc(FBU, ANNUL, PN)
fbg fcc, symbol			= fbpfcc(FBG, NOANNUL, PT)
fbg,pt fcc, symbol		= fbpfcc(FBG, NOANNUL, PT)
fbg,pn fcc, symbol		= fbpfcc(FBG, NOANNUL, PN)
fbg,a fcc, symbol		= fbpfcc(FBG, ANNUL, PT)
fbg,a,pt fcc, symbol		= fbpfcc(FBG, ANNUL, PT)
fbg,a,pn fcc, symbol		= fbpfcc(FBG, ANNUL, PN)
fbug fcc, symbol		= fbpfcc(FBUG, NOANNUL, PT)
fbug,pt fcc, symbol		= fbpfcc(FBUG, NOANNUL, PT)
fbug,pn fcc, symbol		= fbpfcc(FBUG, NOANNUL, PN)
fbug,a fcc, symbol		= fbpfcc(FBUG, ANNUL, PT)
fbug,a,pt fcc, symbol		= fbpfcc(FBUG, ANNUL, PT)
fbug,a,pn fcc, symbol		= fbpfcc(FBUG, ANNUL, PN)
fbl fcc, symbol			= fbpfcc(FBL, NOANNUL, PT)
fbl,pt fcc, symbol		= fbpfcc(FBL, NOANNUL, PT)
fbl,pn fcc, symbol		= fbpfcc(FBL, NOANNUL, PN)
fbl,a fcc, symbol		= fbpfcc(FBL, ANNUL, PT)
fbl,a,pt fcc, symbol		= fbpfcc(FBL, ANNUL, PT)
fbl,a,pn fcc, symbol		= fbpfcc(FBL, ANNUL, PN)
fbul fcc, symbol		= fbpfcc(FBUL, NOANNUL, PT)
fbul,pt fcc, symbol		= fbpfcc(FBUL, NOANNUL, PT)
fbul,pn fcc, symbol		= fbpfcc(FBUL, NOANNUL, PN)
fbul,a fcc, symbol		= fbpfcc(FBUL, ANNUL, PT)
fbul,a,pt fcc, symbol		= fbpfcc(FBUL, ANNUL, PT)
fbul,a,pn fcc, symbol		= fbpfcc(FBUL, ANNUL, PN)
fblg fcc, symbol		= fbpfcc(FBLG, NOANNUL, PT)
fblg,pt fcc, symbol		= fbpfcc(FBLG, NOANNUL, PT)
fblg,pn fcc, symbol		= fbpfcc(FBLG, NOANNUL, PN)
fblg,a fcc, symbol		= fbpfcc(FBLG, ANNUL, PT)
fblg,a,pt fcc, symbol		= fbpfcc(FBLG, ANNUL, PT)
fblg,a,pn fcc, symbol		= fbpfcc(FBLG, ANNUL, PN)
fbne fcc, symbol		= fbpfcc(FBNE, NOANNUL, PT)
fbne,pt fcc, symbol		= fbpfcc(FBNE, NOANNUL, PT)
fbne,pn fcc, symbol		= fbpfcc(FBNE, NOANNUL, PN)
fbne,a fcc, symbol		= fbpfcc(FBNE, ANNUL, PT)
fbne,a,pt fcc, symbol		= fbpfcc(FBNE, ANNUL, PT)
fbne,a,pn fcc, symbol		= fbpfcc(FBNE, ANNUL, PN)
fbe fcc, symbol			= fbpfcc(FBE, NOANNUL, PT)
fbe,pt fcc, symbol		= fbpfcc(FBE, NOANNUL, PT)
fbe,pn fcc, symbol		= fbpfcc(FBE, NOANNUL, PN)
fbe,a fcc, symbol		= fbpfcc(FBE, ANNUL, PT)
fbe,a,pt fcc, symbol		= fbpfcc(FBE, ANNUL, PT)
fbe,a,pn fcc, symbol		= fbpfcc(FBE, ANNUL, PN)
fbue fcc, symbol		= fbpfcc(FBUE, NOANNUL, PT)
fbue,pt fcc, symbol		= fbpfcc(FBUE, NOANNUL, PT)
fbue,pn fcc, symbol		= fbpfcc(FBUE, NOANNUL, PN)
fbue,a fcc, symbol		= fbpfcc(FBUE, ANNUL, PT)
fbue,a,pt fcc, symbol		= fbpfcc(FBUE, ANNUL, PT)
fbue,a,pn fcc, symbol		= fbpfcc(FBUE, ANNUL, PN)
fbge fcc, symbol		= fbpfcc(FBGE, NOANNUL, PT)
fbge,pt fcc, symbol		= fbpfcc(FBGE, NOANNUL, PT)
fbge,pn fcc, symbol		= fbpfcc(FBGE, NOANNUL, PN)
fbge,a fcc, symbol		= fbpfcc(FBGE, ANNUL, PT)
fbge,a,pt fcc, symbol		= fbpfcc(FBGE, ANNUL, PT)
fbge,a,pn fcc, symbol		= fbpfcc(FBGE, ANNUL, PN)
fbuge fcc, symbol		= fbpfcc(FBUGE, NOANNUL, PT)
fbuge,pt fcc, symbol		= fbpfcc(FBUGE, NOANNUL, PT)
fbuge,pn fcc, symbol		= fbpfcc(FBUGE, NOANNUL, PN)
fbuge,a fcc, symbol		= fbpfcc(FBUGE, ANNUL, PT)
fbuge,a,pt fcc, symbol		= fbpfcc(FBUGE, ANNUL, PT)
fbuge,a,pn fcc, symbol		= fbpfcc(FBUGE, ANNUL, PN)
fble fcc, symbol		= fbpfcc(FBLE, NOANNUL, PT)
fble,pt fcc, symbol		= fbpfcc(FBLE, NOANNUL, PT)
fble,pn fcc, symbol		= fbpfcc(FBLE, NOANNUL, PN)
fble,a fcc, symbol		= fbpfcc(FBLE, ANNUL, PT)
fble,a,pt fcc, symbol		= fbpfcc(FBLE, ANNUL, PT)
fble,a,pn fcc, symbol		= fbpfcc(FBLE, ANNUL, PN)
fbule fcc, symbol		= fbpfcc(FBULE, NOANNUL, PT)
fbule,pt fcc, symbol		= fbpfcc(FBULE, NOANNUL, PT)
fbule,pn fcc, symbol		= fbpfcc(FBULE, NOANNUL, PN)
fbule,a fcc, symbol		= fbpfcc(FBULE, ANNUL, PT)
fbule,a,pt fcc, symbol		= fbpfcc(FBULE, ANNUL, PT)
fbule,a,pn fcc, symbol		= fbpfcc(FBULE, ANNUL, PN)
fbo fcc, symbol			= fbpfcc(FBO, NOANNUL, PT)
fbo,pt fcc, symbol		= fbpfcc(FBO, NOANNUL, PT)
fbo,pn fcc, symbol		= fbpfcc(FBO, NOANNUL, PN)
fbo,a fcc, symbol		= fbpfcc(FBO, ANNUL, PT)
fbo,a,pt fcc, symbol		= fbpfcc(FBO, ANNUL, PT)
fbo,a,pn fcc, symbol		= fbpfcc(FBO, ANNUL, PN)
# same as fbne and fbe
fbnz fcc, symbol		= fbpfcc(FBNE, NOANNUL, PT)
fbnz,pt fcc, symbol		= fbpfcc(FBNE, NOANNUL, PT)
fbnz,pn fcc, symbol		= fbpfcc(FBNE, NOANNUL, PN)
fbnz,a fcc, symbol		= fbpfcc(FBNE, ANNUL, PT)
fbnz,a,pt fcc, symbol		= fbpfcc(FBNE, ANNUL, PT)
fbnz,a,pn fcc, symbol		= fbpfcc(FBNE, ANNUL, PN)
fbz fcc, symbol			= fbpfcc(FBE, NOANNUL, PT)
fbz,pt fcc, symbol		= fbpfcc(FBE, NOANNUL, PT)
fbz,pn fcc, symbol		= fbpfcc(FBE, NOANNUL, PN)
fbz,a fcc, symbol		= fbpfcc(FBE, ANNUL, PT)
fbz,a,pt fcc, symbol		= fbpfcc(FBE, ANNUL, PT)
fbz,a,pn fcc, symbol		= fbpfcc(FBE, ANNUL, PN)

# note: these are deprecated and for v8 compat only
ba symbol			= bicc(BA, NOANNUL)
ba,a symbol			= bicc(BA, ANNUL)
bn symbol			= bicc(BN, NOANNUL)
bn,a symbol			= bicc(BN, ANNUL)
bne symbol			= bicc(BNE, NOANNUL)
bne,a symbol			= bicc(BNE, ANNUL)
be symbol			= bicc(BE, NOANNUL)
be,a symbol			= bicc(BE, ANNUL)
bg symbol			= bicc(BG, NOANNUL)
bg,a symbol			= bicc(BG, ANNUL)
ble symbol			= bicc(BLE, NOANNUL)
ble,a symbol			= bicc(BLE, ANNUL)
bge symbol			= bicc(BGE, NOANNUL)
bge,a symbol			= bicc(BGE, ANNUL)
bl symbol			= bicc(BL, NOANNUL)
bl,a symbol			= bicc(BL, ANNUL)
bgu symbol			= bicc(BGU, NOANNUL)
bgu,a symbol			= bicc(BGU, ANNUL)
bleu symbol			= bicc(BLEU, NOANNUL)
bleu,a symbol			= bicc(BLEU, ANNUL)
bcc symbol			= bicc(BCC, NOANNUL)
bcc,a symbol			= bicc(BCC, ANNUL)
bcs symbol			= bicc(BCS, NOANNUL)
bcs,a symbol			= bicc(BCS, ANNUL)
bpos symbol			= bicc(BPOS, NOANNUL)
bpos,a symbol			= bicc(BPOS, ANNUL)
bneg symbol			= bicc(BNEG, NOANNUL)
bneg,a symbol			= bicc(BNEG, ANNUL)
bvc symbol			= bicc(BVC, NOANNUL)
bvc,a symbol			= bicc(BVC, ANNUL)
bvs symbol			= bicc(BVS, NOANNUL)
bvs,a symbol			= bicc(BVS, ANNUL)
# synonyms
bnz symbol			= bicc(BNE, NOANNUL)
bnz,a symbol			= bicc(BNE, ANNUL)
bz symbol			= bicc(BE, NOANNUL)
bz,a symbol			= bicc(BE, ANNUL)
bgeu symbol			= bicc(BCC, NOANNUL)
bgeu,a symbol			= bicc(BCC, ANNUL)
blu symbol			= bicc(BCS, NOANNUL)
blu,a symbol			= bicc(BCS, ANNUL)

# these are the v9 versions
ba icc, symbol			= bpcc(BA, NOANNUL, PT)
ba,pt icc, symbol		= bpcc(BA, NOANNUL, PT)
ba,pn icc, symbol		= bpcc(BA, NOANNUL, PN)
ba,a icc, symbol		= bpcc(BA, ANNUL, PT)
ba,a,pt icc, symbol		= bpcc(BA, ANNUL, PT)
ba,a,pn icc, symbol		= bpcc(BA, ANNUL, PN)
bn icc, symbol			= bpcc(BN, NOANNUL, PT)
bn,pt icc, symbol		= bpcc(BN, NOANNUL, PT)
bn,pn icc, symbol		= bpcc(BN, NOANNUL, PN)
bn,a icc, symbol		= bpcc(BN, ANNUL, PT)
bn,a,pt icc, symbol		= bpcc(BN, ANNUL, PT)
bn,a,pn icc, symbol		= bpcc(BN, ANNUL, PN)
bne icc, symbol			= bpcc(BNE, NOANNUL, PT)
bne,pt icc, symbol		= bpcc(BNE, NOANNUL, PT)
bne,pn icc, symbol		= bpcc(BNE, NOANNUL, PN)
bne,a icc, symbol		= bpcc(BNE, ANNUL, PT)
bne,a,pt icc, symbol		= bpcc(BNE, ANNUL, PT)
bne,a,pn icc, symbol		= bpcc(BNE, ANNUL, PN)
be icc, symbol			= bpcc(BE, NOANNUL, PT)
be,pt icc, symbol		= bpcc(BE, NOANNUL, PT)
be,pn icc, symbol		= bpcc(BE, NOANNUL, PN)
be,a icc, symbol		= bpcc(BE, ANNUL, PT)
be,a,pt icc, symbol		= bpcc(BE, ANNUL, PT)
be,a,pn icc, symbol		= bpcc(BE, ANNUL, PN)
bg icc, symbol			= bpcc(BG, NOANNUL, PT)
bg,pt icc, symbol		= bpcc(BG, NOANNUL, PT)
bg,pn icc, symbol		= bpcc(BG, NOANNUL, PN)
bg,a icc, symbol		= bpcc(BG, ANNUL, PT)
bg,a,pt icc, symbol		= bpcc(BG, ANNUL, PT)
bg,a,pn icc, symbol		= bpcc(BG, ANNUL, PN)
ble icc, symbol			= bpcc(BLE, NOANNUL, PT)
ble,pt icc, symbol		= bpcc(BLE, NOANNUL, PT)
ble,pn icc, symbol		= bpcc(BLE, NOANNUL, PN)
ble,a icc, symbol		= bpcc(BLE, ANNUL, PT)
ble,a,pt icc, symbol		= bpcc(BLE, ANNUL, PT)
ble,a,pn icc, symbol		= bpcc(BLE, ANNUL, PN)
bge icc, symbol			= bpcc(BGE, NOANNUL, PT)
bge,pt icc, symbol		= bpcc(BGE, NOANNUL, PT)
bge,pn icc, symbol		= bpcc(BGE, NOANNUL, PN)
bge,a icc, symbol		= bpcc(BGE, ANNUL, PT)
bge,a,pt icc, symbol		= bpcc(BGE, ANNUL, PT)
bge,a,pn icc, symbol		= bpcc(BGE, ANNUL, PN)
bl icc, symbol			= bpcc(BL, NOANNUL, PT)
bl,pt icc, symbol		= bpcc(BL, NOANNUL, PT)
bl,pn icc, symbol		= bpcc(BL, NOANNUL, PN)
bl,a icc, symbol		= bpcc(BL, ANNUL, PT)
bl,a,pt icc, symbol		= bpcc(BL, ANNUL, PT)
bl,a,pn icc, symbol		= bpcc(BL, ANNUL, PN)
bgu icc, symbol			= bpcc(BGU, NOANNUL, PT)
bgu,pt icc, symbol		= bpcc(BGU, NOANNUL, PT)
bgu,pn icc, symbol		= bpcc(BGU, NOANNUL, PN)
bgu,a icc, symbol		= bpcc(BGU, ANNUL, PT)
bgu,a,pt icc, symbol		= bpcc(BGU, ANNUL, PT)
bgu,a,pn icc, symbol		= bpcc(BGU, ANNUL, PN)
bleu icc, symbol		= bpcc(BLEU, NOANNUL, PT)
bleu,pt icc, symbol		= bpcc(BLEU, NOANNUL, PT)
bleu,pn icc, symbol		= bpcc(BLEU, NOANNUL, PN)
bleu,a icc, symbol		= bpcc(BLEU, ANNUL, PT)
bleu,a,pt icc, symbol		= bpcc(BLEU, ANNUL, PT)
bleu,a,pn icc, symbol		= bpcc(BLEU, ANNUL, PN)
bcc icc, symbol			= bpcc(BCC, NOANNUL, PT)
bcc,pt icc, symbol		= bpcc(BCC, NOANNUL, PT)
bcc,pn icc, symbol		= bpcc(BCC, NOANNUL, PN)
bcc,a icc, symbol		= bpcc(BCC, ANNUL, PT)
bcc,a,pt icc, symbol		= bpcc(BCC, ANNUL, PT)
bcc,a,pn icc, symbol		= bpcc(BCC, ANNUL, PN)
bcs icc, symbol			= bpcc(BCS, NOANNUL, PT)
bcs,pt icc, symbol		= bpcc(BCS, NOANNUL, PT)
bcs,pn icc, symbol		= bpcc(BCS, NOANNUL, PN)
bcs,a icc, symbol		= bpcc(BCS, ANNUL, PT)
bcs,a,pt icc, symbol		= bpcc(BCS, ANNUL, PT)
bcs,a,pn icc, symbol		= bpcc(BCS, ANNUL, PN)
bpos icc, symbol		= bpcc(BPOS, NOANNUL, PT)
bpos,pt icc, symbol		= bpcc(BPOS, NOANNUL, PT)
bpos,pn icc, symbol		= bpcc(BPOS, NOANNUL, PN)
bpos,a icc, symbol		= bpcc(BPOS, ANNUL, PT)
bpos,a,pt icc, symbol		= bpcc(BPOS, ANNUL, PT)
bpos,a,pn icc, symbol		= bpcc(BPOS, ANNUL, PN)
bneg icc, symbol		= bpcc(BNEG, NOANNUL, PT)
bneg,pt icc, symbol		= bpcc(BNEG, NOANNUL, PT)
bneg,pn icc, symbol		= bpcc(BNEG, NOANNUL, PN)
bneg,a icc, symbol		= bpcc(BNEG, ANNUL, PT)
bneg,a,pt icc, symbol		= bpcc(BNEG, ANNUL, PT)
bneg,a,pn icc, symbol		= bpcc(BNEG, ANNUL, PN)
bvc icc, symbol			= bpcc(BVC, NOANNUL, PT)
bvc,pt icc, symbol		= bpcc(BVC, NOANNUL, PT)
bvc,pn icc, symbol		= bpcc(BVC, NOANNUL, PN)
bvc,a icc, symbol		= bpcc(BVC, ANNUL, PT)
bvc,a,pt icc, symbol		= bpcc(BVC, ANNUL, PT)
bvc,a,pn icc, symbol		= bpcc(BVC, ANNUL, PN)
bvs icc, symbol			= bpcc(BVS, NOANNUL, PT)
bvs,pt icc, symbol		= bpcc(BVS, NOANNUL, PT)
bvs,pn icc, symbol		= bpcc(BVS, NOANNUL, PN)
bvs,a icc, symbol		= bpcc(BVS, ANNUL, PT)
bvs,a,pt icc, symbol		= bpcc(BVS, ANNUL, PT)
bvs,a,pn icc, symbol		= bpcc(BVS, ANNUL, PN)
# synonyms
bnz icc, symbol			= bpcc(BNE, NOANNUL, PT)
bnz,pt icc, symbol		= bpcc(BNE, NOANNUL, PT)
bnz,pn icc, symbol		= bpcc(BNE, NOANNUL, PN)
bnz,a icc, symbol		= bpcc(BNE, ANNUL, PT)
bnz,a,pt icc, symbol		= bpcc(BNE, ANNUL, PT)
bnz,a,pn icc, symbol		= bpcc(BNE, ANNUL, PN)
bz icc, symbol			= bpcc(BE, NOANNUL, PT)
bz,pt icc, symbol		= bpcc(BE, NOANNUL, PT)
bz,pn icc, symbol		= bpcc(BE, NOANNUL, PN)
bz,a icc, symbol		= bpcc(BE, ANNUL, PT)
bz,a,pt icc, symbol		= bpcc(BE, ANNUL, PT)
bz,a,pn icc, symbol		= bpcc(BE, ANNUL, PN)
bgeu icc, symbol		= bpcc(BCC, NOANNUL, PT)
bgeu,pt icc, symbol		= bpcc(BCC, NOANNUL, PT)
bgeu,pn icc, symbol		= bpcc(BCC, NOANNUL, PN)
bgeu,a icc, symbol		= bpcc(BCC, ANNUL, PT)
bgeu,a,pt icc, symbol		= bpcc(BCC, ANNUL, PT)
bgeu,a,pn icc, symbol		= bpcc(BCC, ANNUL, PN)
blu icc, symbol			= bpcc(BCS, NOANNUL, PT)
blu,pt icc, symbol		= bpcc(BCS, NOANNUL, PT)
blu,pn icc, symbol		= bpcc(BCS, NOANNUL, PN)
blu,a icc, symbol		= bpcc(BCS, ANNUL, PT)
blu,a,pt icc, symbol		= bpcc(BCS, ANNUL, PT)
blu,a,pn icc, symbol		= bpcc(BCS, ANNUL, PN)

fmovsa icc, freg, freg		= fmov(FMOVScc, BA)
fmovda icc, freg, freg		= fmov(FMOVDcc, BA)
fmovqa icc, freg, freg		= fmov(FMOVQcc, BA)
fmovsn icc, freg, freg		= fmov(FMOVScc, BN)
fmovdn icc, freg, freg		= fmov(FMOVDcc, BN)
fmovqn icc, freg, freg		= fmov(FMOVQcc, BN)
fmovsne icc, freg, freg		= fmov(FMOVScc, BNE)
fmovdne icc, freg, freg		= fmov(FMOVDcc, BNE)
fmovqne icc, freg, freg		= fmov(FMOVQcc, BNE)
fmovse icc, freg, freg		= fmov(FMOVScc, BE)
fmovde icc, freg, freg		= fmov(FMOVDcc, BE)
fmovqe icc, freg, freg		= fmov(FMOVQcc, BE)
fmovsg icc, freg, freg		= fmov(FMOVScc, BG)
fmovdg icc, freg, freg		= fmov(FMOVDcc, BG)
fmovqg icc, freg, freg		= fmov(FMOVQcc, BG)
fmovsle icc, freg, freg		= fmov(FMOVScc, BLE)
fmovdle icc, freg, freg		= fmov(FMOVDcc, BLE)
fmovqle icc, freg, freg		= fmov(FMOVQcc, BLE)
fmovsge icc, freg, freg		= fmov(FMOVScc, BGE)
fmovdge icc, freg, freg		= fmov(FMOVDcc, BGE)
fmovqge icc, freg, freg		= fmov(FMOVQcc, BGE)
fmovsl icc, freg, freg		= fmov(FMOVScc, BL)
fmovdl icc, freg, freg		= fmov(FMOVDcc, BL)
fmovql icc, freg, freg		= fmov(FMOVQcc, BL)
fmovsgu icc, freg, freg		= fmov(FMOVScc, BGU)
fmovdgu icc, freg, freg		= fmov(FMOVDcc, BGU)
fmovqgu icc, freg, freg		= fmov(FMOVQcc, BGU)
fmovsleu icc, freg, freg	= fmov(FMOVScc, BLEU)
fmovdleu icc, freg, freg	= fmov(FMOVDcc, BLEU)
fmovqleu icc, freg, freg	= fmov(FMOVQcc, BLEU)
fmovscc icc, freg, freg		= fmov(FMOVScc, BCC)
fmovdcc icc, freg, freg		= fmov(FMOVDcc, BCC)
fmovqcc icc, freg, freg		= fmov(FMOVQcc, BCC)
fmovscs icc, freg, freg		= fmov(FMOVScc, BCS)
fmovdcs icc, freg, freg		= fmov(FMOVDcc, BCS)
fmovqcs icc, freg, freg		= fmov(FMOVQcc, BCS)
fmovspos icc, freg, freg	= fmov(FMOVScc, BPOS)
fmovdpos icc, freg, freg	= fmov(FMOVDcc, BPOS)
fmovqpos icc, freg, freg	= fmov(FMOVQcc, BPOS)
fmovsneg icc, freg, freg	= fmov(FMOVScc, BNEG)
fmovdneg icc, freg, freg	= fmov(FMOVDcc, BNEG)
fmovqneg icc, freg, freg	= fmov(FMOVQcc, BNEG)
fmovsvc icc, freg, freg		= fmov(FMOVScc, BVC)
fmovdvc icc, freg, freg		= fmov(FMOVDcc, BVC)
fmovqvc icc, freg, freg		= fmov(FMOVQcc, BVC)
fmovsvs icc, freg, freg		= fmov(FMOVScc, BVS)
fmovdvs icc, freg, freg		= fmov(FMOVDcc, BVS)
fmovqvs icc, freg, freg		= fmov(FMOVQcc, BVS)
# synonyms
fmovsnz icc, freg, freg		= fmov(FMOVScc, BNE)
fmovdnz icc, freg, freg		= fmov(FMOVDcc, BNE)
fmovqnz icc, freg, freg		= fmov(FMOVQcc, BNE)
fmovsz icc, freg, freg		= fmov(FMOVScc, BE)
fmovdz icc, freg, freg		= fmov(FMOVDcc, BE)
fmovqz icc, freg, freg		= fmov(FMOVQcc, BE)
fmovsgeu icc, freg, freg	= fmov(FMOVScc, BCC)
fmovdgeu icc, freg, freg	= fmov(FMOVDcc, BCC)
fmovqgeu icc, freg, freg	= fmov(FMOVQcc, BCC)
fmovslu icc, freg, freg		= fmov(FMOVScc, BCS)
fmovdlu icc, freg, freg		= fmov(FMOVDcc, BCS)
fmovqlu icc, freg, freg		= fmov(FMOVQcc, BCS)

fmovsa fcc, freg, freg		= fmov(FMOVScc, FBA)
fmovda fcc, freg, freg		= fmov(FMOVDcc, FBA)
fmovqa fcc, freg, freg		= fmov(FMOVQcc, FBA)
fmovsn fcc, freg, freg		= fmov(FMOVScc, FBN)
fmovdn fcc, freg, freg		= fmov(FMOVDcc, FBN)
fmovqn fcc, freg, freg		= fmov(FMOVQcc, FBN)
fmovsu fcc, freg, freg		= fmov(FMOVScc, FBU)
fmovdu fcc, freg, freg		= fmov(FMOVDcc, FBU)
fmovqu fcc, freg, freg		= fmov(FMOVQcc, FBU)
fmovsg fcc, freg, freg		= fmov(FMOVScc, FBG)
fmovdg fcc, freg, freg		= fmov(FMOVDcc, FBG)
fmovqg fcc, freg, freg		= fmov(FMOVQcc, FBG)
fmovsug fcc, freg, freg		= fmov(FMOVScc, FBUG)
fmovdug fcc, freg, freg		= fmov(FMOVDcc, FBUG)
fmovqug fcc, freg, freg		= fmov(FMOVQcc, FBUG)
fmovsl fcc, freg, freg		= fmov(FMOVScc, FBL)
fmovdl fcc, freg, freg		= fmov(FMOVDcc, FBL)
fmovql fcc, freg, freg		= fmov(FMOVQcc, FBL)
fmovsul fcc, freg, freg		= fmov(FMOVScc, FBUL)
fmovdul fcc, freg, freg		= fmov(FMOVDcc, FBUL)
fmovqul fcc, freg, freg		= fmov(FMOVQcc, FBUL)
fmovslg fcc, freg, freg		= fmov(FMOVScc, FBLG)
fmovdlg fcc, freg, freg		= fmov(FMOVDcc, FBLG)
fmovqlg fcc, freg, freg		= fmov(FMOVQcc, FBLG)
fmovsne fcc, freg, freg		= fmov(FMOVScc, FBNE)
fmovdne fcc, freg, freg		= fmov(FMOVDcc, FBNE)
fmovqne fcc, freg, freg		= fmov(FMOVQcc, FBNE)
fmovse fcc, freg, freg		= fmov(FMOVScc, FBE)
fmovde fcc, freg, freg		= fmov(FMOVDcc, FBE)
fmovqe fcc, freg, freg		= fmov(FMOVQcc, FBE)
fmovsue fcc, freg, freg		= fmov(FMOVScc, FBUE)
fmovdue fcc, freg, freg		= fmov(FMOVDcc, FBUE)
fmovque fcc, freg, freg		= fmov(FMOVQcc, FBUE)
fmovsge fcc, freg, freg		= fmov(FMOVScc, FBGE)
fmovdge fcc, freg, freg		= fmov(FMOVDcc, FBGE)
fmovqge fcc, freg, freg		= fmov(FMOVQcc, FBGE)
fmovsuge fcc, freg, freg	= fmov(FMOVScc, FBUGE)
fmovduge fcc, freg, freg	= fmov(FMOVDcc, FBUGE)
fmovquge fcc, freg, freg	= fmov(FMOVQcc, FBUGE)
fmovsle fcc, freg, freg		= fmov(FMOVScc, FBLE)
fmovdle fcc, freg, freg		= fmov(FMOVDcc, FBLE)
fmovqle fcc, freg, freg		= fmov(FMOVQcc, FBLE)
fmovsule fcc, freg, freg	= fmov(FMOVScc, FBULE)
fmovdule fcc, freg, freg	= fmov(FMOVDcc, FBULE)
fmovqule fcc, freg, freg	= fmov(FMOVQcc, FBULE)
fmovso fcc, freg, freg		= fmov(FMOVScc, FBO)
fmovdo fcc, freg, freg		= fmov(FMOVDcc, FBO)
fmovqo fcc, freg, freg		= fmov(FMOVQcc, FBO)
# synonyms	
fmovsnz fcc, freg, freg		= fmov(FMOVScc, FBNE)
fmovdnz fcc, freg, freg		= fmov(FMOVDcc, FBNE)
fmovqnz fcc, freg, freg		= fmov(FMOVQcc, FBNE)
fmovsz fcc, freg, freg		= fmov(FMOVScc, FBE)
fmovdz fcc, freg, freg		= fmov(FMOVDcc, FBE)
fmovqz fcc, freg, freg		= fmov(FMOVQcc, FBE)

fmovrsz reg, freg, freg		= fmov(FMOVSrc, BRZ)
fmovrdz reg, freg, freg		= fmov(FMOVDrc, BRZ)
fmovrqz reg, freg, freg		= fmov(FMOVQrc, BRZ)
fmovrslez reg, freg, freg	= fmov(FMOVSrc, BRLEZ)
fmovrdlez reg, freg, freg	= fmov(FMOVDrc, BRLEZ)
fmovrqlez reg, freg, freg	= fmov(FMOVQrc, BRLEZ)
fmovrslz reg, freg, freg	= fmov(FMOVSrc, BRLZ)
fmovrdlz reg, freg, freg	= fmov(FMOVDrc, BRLZ)
fmovrqlz reg, freg, freg	= fmov(FMOVQrc, BRLZ)
fmovrsnz reg, freg, freg	= fmov(FMOVSrc, BRNZ)
fmovrdnz reg, freg, freg	= fmov(FMOVDrc, BRNZ)
fmovrqnz reg, freg, freg	= fmov(FMOVQrc, BRNZ)
fmovrsg reg, freg, freg		= fmov(FMOVSrc, BRGZ)
fmovrdg reg, freg, freg		= fmov(FMOVDrc, BRGZ)
fmovrqg reg, freg, freg		= fmov(FMOVQrc, BRGZ)
fmovrsgez reg, freg, freg	= fmov(FMOVSrc, BRGEZ)
fmovrdgez reg, freg, freg	= fmov(FMOVDrc, BRGEZ)
fmovrqgez reg, freg, freg	= fmov(FMOVQrc, BRGEZ)
# synonyms
fmovrse reg, freg, freg		= fmov(FMOVSrc, BRZ)
fmovrde reg, freg, freg		= fmov(FMOVDrc, BRZ)
fmovrqe reg, freg, freg		= fmov(FMOVQrc, BRZ)
fmovrsne reg, freg, freg	= fmov(FMOVSrc, BRNZ)
fmovrdne reg, freg, freg	= fmov(FMOVDrc, BRNZ)
fmovrqne reg, freg, freg	= fmov(FMOVQrc, BRNZ)

mova icc, reg, reg		= movcc_(BA)
mova icc, i11num, reg		= movcc_(BA)
movn icc, reg, reg		= movcc_(BN)
movn icc, i11num, reg		= movcc_(BN)
movne icc, reg, reg		= movcc_(BNE)
movne icc, i11num, reg		= movcc_(BNE)
move icc, reg, reg		= movcc_(BE)
move icc, i11num, reg		= movcc_(BE)
movg icc, reg, reg		= movcc_(BG)
movg icc, i11num, reg		= movcc_(BG)
movle icc, reg, reg		= movcc_(BLE)
movle icc, i11num, reg		= movcc_(BLE)
movge icc, reg, reg		= movcc_(BGE)
movge icc, i11num, reg		= movcc_(BGE)
movl icc, reg, reg		= movcc_(BL)
movl icc, i11num, reg		= movcc_(BL)
movgu icc, reg, reg		= movcc_(BGU)
movgu icc, i11num, reg		= movcc_(BGU)
movleu icc, reg, reg		= movcc_(BLEU)
movleu icc, i11num, reg		= movcc_(BLEU)
movcc icc, reg, reg		= movcc_(BCC)
movcc icc, i11num, reg		= movcc_(BCC)
movcs icc, reg, reg		= movcc_(BCS)
movcs icc, i11num, reg		= movcc_(BCS)
movpos icc, reg, reg		= movcc_(BPOS)
movpos icc, i11num, reg		= movcc_(BPOS)
movneg icc, reg, reg		= movcc_(BNEG)
movneg icc, i11num, reg		= movcc_(BNEG)
movvc icc, reg, reg		= movcc_(BVC)
movvc icc, i11num, reg		= movcc_(BVC)
movvs icc, reg, reg		= movcc_(BVS)
movvs icc, i11num, reg		= movcc_(BVS)
# synonyms
movnz icc, reg, reg		= movcc_(BNE)
movnz icc, i11num, reg		= movcc_(BNE)
movz icc, reg, reg		= movcc_(BE)
movz icc, i11num, reg		= movcc_(BE)
movgeu icc, reg, reg		= movcc_(BCC)
movgeu icc, i11num, reg		= movcc_(BCC)
movlu icc, reg, reg		= movcc_(BCS)
movlu icc, i11num, reg		= movcc_(BCS)

mova fcc, reg, reg		= movcc_(FBA)
mova fcc, i11num, reg		= movcc_(FBA)
movn fcc, reg, reg		= movcc_(FBN)
movn fcc, i11num, reg		= movcc_(FBN)
movu fcc, reg, reg		= movcc_(FBU)
movu fcc, i11num, reg		= movcc_(FBU)
movg fcc, reg, reg		= movcc_(FBG)
movg fcc, i11num, reg		= movcc_(FBG)
movug fcc, reg, reg		= movcc_(FBUG)
movug fcc, i11num, reg		= movcc_(FBUG)
movl fcc, reg, reg		= movcc_(FBL)
movl fcc, i11num, reg		= movcc_(FBL)
movul fcc, reg, reg		= movcc_(FBUL)
movul fcc, i11num, reg		= movcc_(FBUL)
movlg fcc, reg, reg		= movcc_(FBLG)
movlg fcc, i11num, reg		= movcc_(FBLG)
movne fcc, reg, reg		= movcc_(FBNE)
movne fcc, i11num, reg		= movcc_(FBNE)
move fcc, reg, reg		= movcc_(FBE)
move fcc, i11num, reg		= movcc_(FBE)
movue fcc, reg, reg		= movcc_(FBUE)
movue fcc, i11num, reg		= movcc_(FBUE)
movge fcc, reg, reg		= movcc_(FBGE)
movge fcc, i11num, reg		= movcc_(FBGE)
movuge fcc, reg, reg		= movcc_(FBUGE)
movuge fcc, i11num, reg		= movcc_(FBUGE)
movle fcc, reg, reg		= movcc_(FBLE)
movle fcc, i11num, reg		= movcc_(FBLE)
movule fcc, reg, reg		= movcc_(FBULE)
movule fcc, i11num, reg		= movcc_(FBULE)
movo fcc, reg, reg		= movcc_(FBO)
movo fcc, i11num, reg		= movcc_(FBO)
# synonyms
movnz fcc, reg, reg		= movcc_(FBNE)
movnz fcc, i11num, reg		= movcc_(FBNE)
movz fcc, reg, reg		= movcc_(FBE)
movz fcc, i11num, reg		= movcc_(FBE)

movrz reg, reg, reg		= movr(BRZ)
movrz reg, i10num, reg		= movr(BRZ)
movrlez reg, reg, reg		= movr(BRLEZ)
movrlez reg, i10num, reg	= movr(BRLEZ)
movrlz reg, reg, reg		= movr(BRLZ)
movrlz reg, i10num, reg		= movr(BRLZ)
movrnz reg, reg, reg		= movr(BRNZ)
movrnz reg, i10num, reg		= movr(BRNZ)
movrgz reg, reg, reg		= movr(BRGZ)
movrgz reg, i10num, reg		= movr(BRGZ)
movrgez reg, reg, reg		= movr(BRGEZ)
movrgez reg, i10num, reg	= movr(BRGEZ)
# synonyms
movre reg, reg, reg		= movr(BRZ)
movre reg, i10num, reg		= movr(BRZ)
movrne reg, reg, reg		= movr(BRNZ)
movrne reg, i10num, reg		= movr(BRNZ)

membar membarmask
stbar

flush addr_rr
flush addr_ri

prefetch braddr_rr, u5num
prefetch braddr_ri, u5num
prefetcha braddr_rr_immasi, u5num
prefetcha braddr_ri_asi, u5num

casa braddr_r_immasi, reg, reg	= casa_(CASA)
casa braddr_r_asi, reg, reg	= casa_(CASA)
casxa braddr_r_immasi, reg, reg	= casa_(CASXA)
casxa braddr_r_asi, reg, reg	= casa_(CASXA)
ldstub braddr_rr, reg
ldstub braddr_ri, reg
ldstub braddr_rx, reg
ldstuba braddr_rr_immasi, reg
ldstuba braddr_ri_asi, reg
swap braddr_rr, reg
swap braddr_ri, reg
swapa braddr_rr_immasi, reg
swapa braddr_ri_asi, reg

ld braddr_rr, freg		= ldf(LDF)
ld braddr_ri, freg		= ldf(LDF)
ld braddr_rx, freg		= ldf(LDF)
ldd braddr_rr, freg		= ldf(LDDF)
ldd braddr_ri, freg		= ldf(LDDF)
ldd braddr_rx, freg		= ldf(LDDF)
ldq braddr_rr, freg		= ldf(LDQF)
ldq braddr_ri, freg		= ldf(LDQF)
ldq braddr_rx, freg		= ldf(LDQF)
ld braddr_rr, fsr		= ldfsr
ld braddr_ri, fsr		= ldfsr
ld braddr_rx, fsr		= ldfsr
ldx braddr_rr, fsr		= ldxfsr
ldx braddr_ri, fsr		= ldxfsr
ldx braddr_rx, fsr		= ldxfsr

lda braddr_rr_immasi, freg	= ldf(LDFA)
lda braddr_ri_asi, freg		= ldf(LDFA)
ldda braddr_rr_immasi, freg	= ldf(LDDFA)
ldda braddr_ri_asi, freg	= ldf(LDDFA)
ldqa braddr_rr_immasi, freg	= ldf(LDQFA)
ldqa braddr_ri_asi, freg	= ldf(LDQFA)

ldsb braddr_rr, reg		= load(LDSB)
ldsb braddr_ri, reg		= load(LDSB)
ldsb braddr_rx, reg		= load(LDSB)
ldsh braddr_rr, reg		= load(LDSH)
ldsh braddr_ri, reg		= load(LDSH)
ldsh braddr_rx, reg		= load(LDSH)
ldsw braddr_rr, reg		= load(LDSW)
ldsw braddr_ri, reg		= load(LDSW)
ldsw braddr_rx, reg		= load(LDSW)
ldub braddr_rr, reg		= load(LDUB)
ldub braddr_ri, reg		= load(LDUB)
ldub braddr_rx, reg		= load(LDUB)
lduh braddr_rr, reg		= load(LDUH)
lduh braddr_ri, reg		= load(LDUH)
lduh braddr_rx, reg		= load(LDUH)
lduw braddr_rr, reg		= load(LDUW)
lduw braddr_ri, reg		= load(LDUW)
lduw braddr_rx, reg		= load(LDUW)
ldx braddr_rr, reg		= load(LDX)
ldx braddr_ri, reg		= load(LDX)
ldx braddr_rx, reg		= load(LDX)
# note: ldd is deprecated and for v8 compat
ldd braddr_rr, reg		= load(LDD)
ldd braddr_ri, reg		= load(LDD)
ldd braddr_rx, reg		= load(LDD)
# ld is the same as lduw
ld braddr_rr, reg		= load(LDUW)
ld braddr_ri, reg		= load(LDUW)
ld braddr_rx, reg		= load(LDUW)

ldsba braddr_rr_immasi, reg	= load(LDSBA)
ldsba braddr_ri_asi, reg	= load(LDSBA)
ldsha braddr_rr_immasi, reg	= load(LDSHA)
ldsha braddr_ri_asi, reg	= load(LDSHA)
ldswa braddr_rr_immasi, reg	= load(LDSWA)
ldswa braddr_ri_asi, reg	= load(LDSWA)
lduba braddr_rr_immasi, reg	= load(LDUBA)
lduba braddr_ri_asi, reg	= load(LDUBA)
lduha braddr_rr_immasi, reg	= load(LDUHA)
lduha braddr_ri_asi, reg	= load(LDUHA)
lduwa braddr_rr_immasi, reg	= load(LDUWA)
lduwa braddr_ri_asi, reg	= load(LDUWA)
ldxa braddr_rr_immasi, reg	= load(LDXA)
ldxa braddr_ri_asi, reg		= load(LDXA)
# note: ldd is deprecated and for v8 compat
ldda braddr_rr_immasi, reg	= load(LDDA)
ldda braddr_ri_asi, reg		= load(LDDA)
# ld is the same as lduw
lda braddr_rr_immasi, reg	= load(LDUWA)
lda braddr_ri_asi, reg		= load(LDUWA)

st freg, braddr_rr		= stf(STF)
st freg, braddr_ri		= stf(STF)
st freg, braddr_rx		= stf(STF)
std freg, braddr_rr		= stf(STDF)
std freg, braddr_ri		= stf(STDF)
std freg, braddr_rx		= stf(STDF)
stq freg, braddr_rr		= stf(STQF)
stq freg, braddr_ri		= stf(STQF)
stq freg, braddr_rx		= stf(STQF)
st fsr, braddr_rr		= stfsr
st fsr, braddr_ri		= stfsr
st fsr, braddr_rx		= stfsr
stx fsr, braddr_rr		= stxfsr
stx fsr, braddr_ri		= stxfsr
stx fsr, braddr_rx		= stxfsr

sta freg, braddr_rr_immasi	= stf(STFA)
sta freg, braddr_ri_asi		= stf(STFA)
stda freg, braddr_rr_immasi	= stf(STDFA)
stda freg, braddr_ri_asi	= stf(STDFA)
stqa freg, braddr_rr_immasi	= stf(STQFA)
stqa freg, braddr_ri_asi	= stf(STQFA)

stb reg, braddr_rr		= store(STB)
stb reg, braddr_ri		= store(STB)
stb reg, braddr_rx		= store(STB)
sth reg, braddr_rr		= store(STH)
sth reg, braddr_ri		= store(STH)
sth reg, braddr_rx		= store(STH)
stw reg, braddr_rr		= store(STW)
stw reg, braddr_ri		= store(STW)
stw reg, braddr_rx		= store(STW)
stx reg, braddr_rr		= store(STX)
stx reg, braddr_ri		= store(STX)
stx reg, braddr_rx		= store(STX)
# note: std is deprecated and for v8 compat
std reg, braddr_rr		= store(STD)
std reg, braddr_ri		= store(STD)
std reg, braddr_rx		= store(STD)
# synonyms
stsb reg, braddr_rr		= store(STB)
stsb reg, braddr_ri		= store(STB)
stsb reg, braddr_rx		= store(STB)
stub reg, braddr_rr		= store(STB)
stub reg, braddr_ri		= store(STB)
stub reg, braddr_rx		= store(STB)
stsh reg, braddr_rr		= store(STH)
stsh reg, braddr_ri		= store(STH)
stsh reg, braddr_rx		= store(STH)
stuh reg, braddr_rr		= store(STH)
stuh reg, braddr_ri		= store(STH)
stuh reg, braddr_rx		= store(STH)
st reg, braddr_rr		= store(STW)
st reg, braddr_ri		= store(STW)
st reg, braddr_rx		= store(STW)
stsw reg, braddr_rr		= store(STW)
stsw reg, braddr_ri		= store(STW)
stsw reg, braddr_rx		= store(STW)
stuw reg, braddr_rr		= store(STW)
stuw reg, braddr_ri		= store(STW)
stuw reg, braddr_rx		= store(STW)

stba reg, braddr_rr_immasi	= store(STBA)
stba reg, braddr_ri_asi		= store(STBA)
stha reg, braddr_rr_immasi	= store(STHA)
stha reg, braddr_ri_asi		= store(STHA)
stwa reg, braddr_rr_immasi	= store(STWA)
stwa reg, braddr_ri_asi		= store(STWA)
stxa reg, braddr_rr_immasi	= store(STXA)
stxa reg, braddr_ri_asi		= store(STXA)
# note: std is deprecated and for v8 compat
stda reg, braddr_rr_immasi	= store(STDA)
stda reg, braddr_ri_asi		= store(STDA)
# synonyms
stsba reg, braddr_rr_immasi	= store(STBA)
stsba reg, braddr_ri_asi	= store(STBA)
stuba reg, braddr_rr_immasi	= store(STBA)
stuba reg, braddr_ri_asi	= store(STBA)
stsha reg, braddr_rr_immasi	= store(STHA)
stsha reg, braddr_ri_asi	= store(STHA)
stuha reg, braddr_rr_immasi	= store(STHA)
stuha reg, braddr_ri_asi	= store(STHA)
stswa reg, braddr_rr_immasi	= store(STWA)
stswa reg, braddr_ri_asi	= store(STWA)
stuwa reg, braddr_rr_immasi	= store(STWA)
stuwa reg, braddr_ri_asi	= store(STWA)
sta reg, braddr_rr_immasi	= store(STWA)
sta reg, braddr_ri_asi		= store(STWA)

call symbol
call symbol, number
jmpl addr_rr, reg
jmpl addr_ri, reg
return addr_rr
return addr_ri

# called "unimp" in v8
illtrap u22num
sir i13num

ta icc, trapnum_rr		= tcc_(BA)
ta icc, trapnum_ri		= tcc_(BA)
tn icc, trapnum_rr		= tcc_(BN)
tn icc, trapnum_ri		= tcc_(BN)
tne icc, trapnum_rr		= tcc_(BNE)
tne icc, trapnum_ri		= tcc_(BNE)
te icc, trapnum_rr		= tcc_(BE)
te icc, trapnum_ri		= tcc_(BE)
tg icc, trapnum_rr		= tcc_(BG)
tg icc, trapnum_ri		= tcc_(BG)
tle icc, trapnum_rr		= tcc_(BLE)
tle icc, trapnum_ri		= tcc_(BLE)
tge icc, trapnum_rr		= tcc_(BGE)
tge icc, trapnum_ri		= tcc_(BGE)
tl icc, trapnum_rr		= tcc_(BL)
tl icc, trapnum_ri		= tcc_(BL)
tgu icc, trapnum_rr		= tcc_(BGU)
tgu icc, trapnum_ri		= tcc_(BGU)
tleu icc, trapnum_rr		= tcc_(BLEU)
tleu icc, trapnum_ri		= tcc_(BLEU)
tcc icc, trapnum_rr		= tcc_(BCC)
tcc icc, trapnum_ri		= tcc_(BCC)
tcs icc, trapnum_rr		= tcc_(BCS)
tcs icc, trapnum_ri		= tcc_(BCS)
tpos icc, trapnum_rr		= tcc_(BPOS)
tpos icc, trapnum_ri		= tcc_(BPOS)
tneg icc, trapnum_rr		= tcc_(BNEG)
tneg icc, trapnum_ri		= tcc_(BNEG)
tvc icc, trapnum_rr		= tcc_(BVC)
tvc icc, trapnum_ri		= tcc_(BVC)
tvs icc, trapnum_rr		= tcc_(BVS)
tvs icc, trapnum_ri		= tcc_(BVS)
# synonyms
tnz icc, trapnum_rr		= tcc_(BNE)
tnz icc, trapnum_ri		= tcc_(BNE)
tz icc, trapnum_rr		= tcc_(BE)
tz icc, trapnum_ri		= tcc_(BE)
tgeu icc, trapnum_rr		= tcc_(BCC)
tgeu icc, trapnum_ri		= tcc_(BCC)
tlu icc, trapnum_rr		= tcc_(BCS)
tlu icc, trapnum_ri		= tcc_(BCS)
	
nop				= nop_

rd asr, reg			= rdasr
wr reg, reg, asr		= wrasr
wr reg, i13num, asr		= wrasr

# replaces the CPopn instructions in v8
# XXX: there is no advertised syntax for these in the spec; I'm guessing
impl1 u5num, u19num		= impl(IMPDEP1)
impl2 u5num, u19num		= impl(IMPDEP2)

rdpr pr, reg
wrpr reg, reg, pr
wrpr reg, i13num, pr
done
retry
flushw
saved
restored

# synthetic
# XXX what is going on with all of these that they can't have the same
# names but the macros in encoding.def need tails?
cmp reg, reg			= cmp_
cmp reg, i13num			= cmp_
jmp addr_rr			= jmp_
jmp addr_ri			= jmp_
call addr_rr			= call_
call addr_ri			= call_
call addr_rr, number		= call_
call addr_ri, number		= call_
ret				= ret_
retl				= retl_
save				= save_
restore				= restore_
iprefetch symbol		= iprefetch_
tst reg				= tst_
setuw u32num, reg		= setuw_
set u32num, reg			= set_
setsw i32num, reg		= setsw_
setx i64num, reg, reg		= setx_
signx reg, reg			= signx_
signx reg			= signx_
not reg, reg			= not_
not reg				= not_
neg reg, reg			= neg_
neg reg				= neg_

cas braddr_r, reg, reg		= cas_
casl braddr_r, reg, reg		= casl_
casx braddr_r, reg, reg		= casx_
casxl braddr_r, reg, reg	= casxl_

inc reg				= inc_
inc i13num, reg			= inc_
inccc reg			= inccc_
inccc i13num, reg		= inccc_
dec reg				= dec_
dec i13num, reg			= dec_
deccc reg			= deccc_
deccc i13num, reg		= deccc_

btst reg, reg			= btst_
btst i13num, reg		= btst_
bset reg, reg			= bset_
bset i13num, reg		= bset_
bclr reg, reg			= bclr_
bclr i13num, reg		= bclr_
btog reg, reg			= btog_
btog i13num, reg		= btog_

clr reg				= clr__
clrb braddr_rr			= clr_(STB)
clrb braddr_ri			= clr_(STB)
clrh braddr_rr 			= clr_(STH)
clrh braddr_ri 			= clr_(STH)
clr braddr_rr			= clr_(STW)
clr braddr_ri			= clr_(STW)
clrx braddr_rr			= clr_(STX)
clrx braddr_ri			= clr_(STX)

clruw reg, reg			= clruw_
clruw reg			= clruw_

mov reg, reg			= mov_
mov i13num, reg			= mov_
mov asr, reg			= mov_
mov reg, asr			= mov_

# according to the gas manual these should pick the 64-bit instructions for
# sparc64 and the 32-bit instructions for sparc32.
ldn braddr_rr, reg		= ldx
ldn braddr_ri, reg		= ldx
ldna braddr_rr_immasi, reg	= ldxa
ldna braddr_ri_asi, reg		= ldxa
stn reg, braddr_rr		= stx
stn reg, braddr_ri		= stx
stna reg, braddr_rr_immasi	= stxa
stna reg, braddr_ri_asi		= stxa
slln reg, reg, reg		= sllx
slln reg, u6num, reg		= sllx
srln reg, reg, reg		= srlx
srln reg, u6num, reg		= srlx
sran reg, reg, reg		= srax
sran reg, u6num, reg		= srax
casn braddr_r, reg, reg		= casx
casna braddr_r_immasi, reg, reg	= casxa
casna braddr_r_asi, reg, reg	= casxa
clrn braddr_rr			= clrx
clrn braddr_ri			= clrx

# directives
.register reg, registertag
