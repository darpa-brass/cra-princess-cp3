#
# Basic properties of machine integers
#

# instruction encoding is always LE
# (except that on some armv7-r you can apparently wire it up the other
# way around; see page a3-112.)
# (and so can armv6 and older)
# so default to little.
endianness: little;	# XXX needs to be dynamic
intencoding: twos_complement;

bytewidth = 8;		# minimum addressable unit
addresswidth = 32;	# size of address
maximumwidth = 64;	# size of largest integer type

#
# Basic properties of machine instructions
#
pcunitwidth = 32;	# Instruction fetch unit (16 for thumb, 32 for arm)

#
# Alignment
# XXX: all are tentative/assumed, should be checked
#
alignwith: logvalue;	# whether .align uses values or log2 values
commalignwith: value;	# whether .comm aligns with values or log2 values
maxalign = 4;		# maximum alignment of any type (log2)
text_alignment = 4;	# default alignemnt of .text (log2)
rdata_alignment = 4;	# default alignemnt of .rdata (log2)
data_alignment = 4;	# default alignemnt of .data (log2)
bss_alignment = 4;	# default alignemnt of .bss (log2)

#
# Linker config
#
temp_label_prefix = ".L";
entry_sym = "_start";
default_textorg = 0x00010000;
default_dataorg = 0x0;
default_bssorg = 0x0;
pagesize = 4096;

#
# ELF format parameters
# XXX: what should the elf_use_rela setting be?
#
elf_machine = "ARM";
elf_use_rela: true;
elf_use_r_ext: false;

#
# Hacks
#
do_reginfo: false;
